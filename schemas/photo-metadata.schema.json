{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://photosync.example.com/schemas/photo-metadata.json",
  "title": "PhotoSync Photo Metadata",
  "description": "Schema for photo metadata in the PhotoSync system",
  "type": "object",
  "required": ["photo_id", "processing_state", "created_at", "updated_at"],
  "properties": {
    "photo_id": {
      "type": "string",
      "format": "uuid",
      "description": "Unique identifier for the photo"
    },
    "content_hash": {
      "type": ["string", "null"],
      "pattern": "^sha256:[a-f0-9]{64}$",
      "description": "SHA256 hash of the photo content"
    },
    "canonical_source": {
      "type": ["string", "null"],
      "pattern": "^[a-zA-Z0-9-]+:[a-zA-Z0-9-_]+$",
      "description": "Source service and ID in format 'service:id'"
    },
    "source_of_truth_path": {
      "type": ["string", "null"],
      "description": "Path to the authoritative copy of the photo"
    },
    "instances": {
      "type": "object",
      "description": "Photo instances across different services",
      "patternProperties": {
        "^[a-zA-Z0-9-]+$": {
          "type": "object",
          "required": ["id"],
          "properties": {
            "id": {
              "type": "string",
              "description": "Service-specific photo ID"
            },
            "quality": {
              "type": "string",
              "enum": ["original", "high", "medium", "low"],
              "default": "original"
            },
            "last_sync": {
              "type": ["string", "null"],
              "format": "date-time"
            },
            "url": {
              "type": ["string", "null"],
              "format": "uri"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "description": "Photo metadata extracted from EXIF and services",
      "properties": {
        "taken_date": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "filename": {
          "type": ["string", "null"]
        },
        "location": {
          "type": ["object", "null"],
          "required": ["lat", "lng"],
          "properties": {
            "lat": {
              "type": "number",
              "minimum": -90,
              "maximum": 90
            },
            "lng": {
              "type": "number",
              "minimum": -180,
              "maximum": 180
            },
            "address": {
              "type": ["string", "null"]
            }
          },
          "additionalProperties": false
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "caption": {
          "type": ["string", "null"]
        },
        "camera_info": {
          "type": ["object", "null"],
          "properties": {
            "make": {
              "type": ["string", "null"]
            },
            "model": {
              "type": ["string", "null"]
            },
            "settings": {
              "type": ["object", "null"]
            }
          },
          "additionalProperties": false
        },
        "dimensions": {
          "type": ["object", "null"],
          "required": ["width", "height"],
          "properties": {
            "width": {
              "type": "integer",
              "minimum": 1
            },
            "height": {
              "type": "integer",
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "file_size": {
          "type": ["integer", "null"],
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "visibility": {
      "type": "object",
      "description": "Photo visibility settings across services",
      "properties": {
        "canonical": {
          "type": "string",
          "enum": ["private", "friends", "public"],
          "default": "private"
        },
        "per_service": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9-]+$": {
              "type": "string",
              "enum": ["private", "friends", "public"]
            }
          },
          "additionalProperties": false
        },
        "discrepancies": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["service", "current", "canonical"],
            "properties": {
              "service": {
                "type": "string"
              },
              "current": {
                "type": "string",
                "enum": ["private", "friends", "public"]
              },
              "canonical": {
                "type": "string",
                "enum": ["private", "friends", "public"]
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "processing_state": {
      "type": "string",
      "enum": ["discovered", "resolved", "replicated"],
      "description": "Current state in the sync workflow"
    },
    "conflicts": {
      "type": "array",
      "description": "Conflicts requiring manual resolution",
      "items": {
        "type": "object",
        "required": ["type", "description", "services"],
        "properties": {
          "type": {
            "type": "string",
            "examples": ["metadata_mismatch", "visibility_conflict", "duplicate_detected"]
          },
          "description": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "resolution_required": {
            "type": "boolean",
            "default": true
          },
          "details": {
            "type": ["object", "null"]
          }
        },
        "additionalProperties": false
      }
    },
    "created_at": {
      "type": "string",
      "format": "date-time"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time"
    }
  },
  "additionalProperties": false
}
